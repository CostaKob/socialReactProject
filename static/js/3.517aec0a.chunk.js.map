{"version":3,"sources":["Components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/ProfileStatus.jsx","Components/Profile/ProfileStatusWithHooks.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatusThunk","ProfileInfo","profile","className","classes","row","column","src","photos","large","fullName","aboutMe","href","contacts","website","facebook","twitter","instagram","lookinForAJob","lookingForAJobDescription","Preloader","Post","item","message","likes","MyPosts","memo","postsElements","posts","reverse","map","p","likesCount","key","id","postsBlock","AddPostFormRedux","onSubmit","values","addPost","newPostBody","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","content","ProfileContainer","userId","this","match","params","loggedinUserId","history","push","getUserProfileThunk","getStatusThunk","compose","auth","isAuth","withRouter"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,IAAM,yBAAyB,OAAS,4BAA4B,cAAgB,qC,oBCAzID,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,WAAa,8B,oBCA9DD,EAAOC,QAAU,CAAC,KAAO,qB,2ICEGC,IAAMC,U,QC4CnBC,EAzCgB,SAACC,GAAW,IAAD,EAERC,oBAAS,GAFD,mBAEjCC,EAFiC,KAEvBC,EAFuB,OAGZF,mBAASD,EAAMI,QAHH,mBAGjCA,EAHiC,KAGzBC,EAHyB,KAKtCC,qBAAU,WACND,EAAUL,EAAMI,UACjB,CAACJ,EAAMI,SAeV,OACI,8BACMF,GACE,6BACI,0BAAMK,cAjBG,WACrBJ,GAAY,KAgBwCH,EAAMI,QAAU,eAG/DF,GACG,6BACI,2BAAOM,SAbA,SAACC,GACpBJ,EAAUI,EAAEC,cAAcC,QAaVC,WAAW,EACXC,OApBO,WACvBV,GAAY,GACZH,EAAMc,kBAAkBV,IAmBRO,MAAOP,OCNhBW,EA5BK,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,QAASF,EAAgC,EAAhCA,kBAAmBV,EAAa,EAAbA,OACjD,OAAKY,EAIH,6BACE,yBAAKC,UAAWC,IAAQC,KACtB,yBAAKF,UAAWC,IAAQE,QACtB,yBAAKC,IAAKL,EAAQM,OAAOC,QACzB,4BAAKP,EAAQQ,UACb,2BAAIR,EAAQS,SACZ,6BAAK,kBAAC,EAAD,CAAwBrB,OAAQA,EAAQU,kBAAmBA,MAElE,yBAAKG,UAAWC,IAAQE,QACtB,4CACA,4BACE,4BAAI,uBAAGM,KAAMV,EAAQW,SAASC,SAA1B,YACJ,4BAAI,uBAAGF,KAAMV,EAAQW,SAASE,UAA1B,aACJ,4BAAI,uBAAGH,KAAMV,EAAQW,SAASG,SAA1B,YACJ,4BAAI,uBAAGJ,KAAMV,EAAQW,SAASI,WAA1B,eAEN,yBAAKd,UAAWC,IAAQc,eAAxB,sBAA2DhB,EAAQiB,8BAnBlE,kBAACC,EAAA,EAAD,O,oDCSIC,EAdF,SAACnC,GAEZ,OACE,yBAAKiB,UAAWC,IAAQkB,MACtB,yBAAKf,IAAI,oEACT,6BAAMrB,EAAMqC,SACZ,uCAAarC,EAAMsC,OACnB,6BACE,yC,iCCJFC,EAAU1C,IAAM2C,MAAK,SAAAxC,GAEzB,IAAIyC,EAEJ,YAAIzC,EAAM0C,OAAOC,UAAUC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAMR,QAASQ,EAAER,QAASC,MAAOO,EAAEC,WAAYC,IAAKF,EAAEG,QAM1F,OACE,yBAAK/B,UAAWC,IAAQ+B,YACtB,wCACA,kBAACC,EAAD,CAAkBC,SAPL,SAACC,GAChBpD,EAAMqD,QAAQD,EAAOE,gBAOnB,yBAAKrC,UAAWC,IAAQwB,OAErBD,OAOHc,EAAcC,YAAiB,IAgB/BN,EAAmBO,YAAU,CAACC,KAAM,mBAAjBD,EAdL,SAACzD,GACnB,OACE,0BAAMmD,SAAUnD,EAAM2D,cACpB,6BACE,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,KAAK,cAChCC,YAAY,qBAAqBC,SAAU,CAACC,IAAUX,MAEzD,6BACE,qDAQOhB,I,QC1BA4B,EAFUC,aAfD,SAACC,GACvB,MAAO,CACL3B,MAAO2B,EAAMC,YAAY5B,MACzB6B,YAAaF,EAAMC,YAAYC,gBAIR,SAACC,GAC1B,MAAO,CACLnB,QAAS,SAACC,GACRkB,EAASC,YAAqBnB,QAKXc,CAA6C7B,GCFvDmC,EAbC,SAAC1E,GAEf,OACE,yBAAKiB,UAAWC,IAAQyD,SAEtB,kBAAC,EAAD,CAAa3D,QAAShB,EAAMgB,QAASZ,OAAQJ,EAAMI,OAAQU,kBAAmBd,EAAMc,oBAEpF,kBAAC,EAAD,Q,eCJA8D,E,kLAGF,IAAIC,EAASC,KAAK9E,MAAM+E,MAAMC,OAAOH,OAEhCA,IACHA,EAASC,KAAK9E,MAAMiF,iBAElBH,KAAK9E,MAAMkF,QAAQC,KAAK,UAI5BL,KAAK9E,MAAMoF,oBAAoBP,GAC/BC,KAAK9E,MAAMqF,eAAeR,K,+BAG1B,OACE,6BACE,kBAAC,EAAD,iBAAaC,KAAK9E,MAAlB,CACEgB,QAAS8D,KAAK9E,MAAMgB,QACpBZ,OAAQ0E,KAAK9E,MAAMI,OACnBU,kBAAmBgE,KAAK9E,MAAMc,0B,GArBTjB,IAAMC,WAkCtBwF,sBACblB,aARoB,SAACC,GAAD,MAAY,CAChCrD,QAASqD,EAAMC,YAAYtD,QAC3BZ,OAAQiE,EAAMC,YAAYlE,OAC1B6E,eAAgBZ,EAAMkB,KAAKvC,GAC3BwC,OAAQnB,EAAMkB,KAAKC,UAIM,CAAEJ,wBAAqBC,mBAAgBvE,wBAChE2E,IAFaH,CAGbV","file":"static/js/3.517aec0a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ProfileInfo_image__1PlRm\",\"row\":\"ProfileInfo_row__3OZVf\",\"column\":\"ProfileInfo_column__2ode0\",\"lookinForAJob\":\"ProfileInfo_lookinForAJob__iLiOh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__glArt\",\"postsBlock\":\"MyPosts_postsBlock__Csxy3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__36yWd\"};","import React from 'react';\r\nimport classes from './Profile.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    activateEditMode = () => {\r\n        \r\n        this.setState ( {\r\n            editMode: true // setState asynchron.\r\n        } );\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState ( {\r\n            editMode: false // setState asynchron.\r\n        } );\r\n        this.props.updateStatusThunk(this.state.status);\r\n    };\r\n    onStatusChange = (e) => {\r\n        this.setState ( {\r\n            status: e.currentTarget.value\r\n        } );\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                { !this.state.editMode && \r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || \"----------\"}</span>\r\n                    </div>\r\n                }\r\n                { this.state.editMode && \r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, { useState, useEffect } from 'react';\r\nimport classes from './Profile.module.css';\r\n\r\n// let arr = [0, () => {}]; destructuring assigment\r\n// let [a, setA] = arr;\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);  // Use State returns [a, setA]\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]); // after render\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatusThunk(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"----------\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from '../../../Common/Preloader/Preloader';\r\nimport ProfileStatus from '../../ProfileStatus';\r\nimport ProfileStatusWithHooks from '../../ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({ profile, updateStatusThunk, status }) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={classes.row}>\r\n        <div className={classes.column}>\r\n          <img src={profile.photos.large} />\r\n          <h2>{profile.fullName}</h2>\r\n          <p>{profile.aboutMe}</p>\r\n          <div><ProfileStatusWithHooks status={status} updateStatusThunk={updateStatusThunk} /></div>\r\n        </div>\r\n        <div className={classes.column}>\r\n          <h2>My Contacts:</h2>\r\n          <ul>\r\n            <li><a href={profile.contacts.website}>Website</a></li>\r\n            <li><a href={profile.contacts.facebook}>Facebook</a></li>\r\n            <li><a href={profile.contacts.twitter}>Twitter</a></li>\r\n            <li><a href={profile.contacts.instagram}>Instagram</a></li>\r\n          </ul>\r\n          <div className={classes.lookinForAJob}>Looking for a job? {profile.lookingForAJobDescription}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n  return (\r\n    <div className={classes.item}>\r\n      <img src=\"https://arrowheadguys.com/wp-content/uploads/2018/11/avatar.jpg\" />\r\n      <div>{props.message}</div>\r\n      <div>likes: {props.likes}</div>\r\n      <div>\r\n        <span>Like</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../Common/FormsControls/FormsControls';\r\n\r\nconst MyPosts = React.memo(props => {\r\n  \r\n  let postsElements =\r\n  //snachala KOPIRUEM massiv dlya immutabelnosti\r\n  [...props.posts].reverse().map(p => <Post message={p.message} likes={p.likesCount} key={p.id} />);\r\n\r\n  const onSubmit = (values) => {\r\n    props.addPost(values.newPostBody);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.postsBlock}>\r\n      <h3>My Posts</h3>\r\n      <AddPostFormRedux onSubmit={onSubmit} />\r\n      <div className={classes.posts}>\r\n\r\n        {postsElements}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name=\"newPostBody\"\r\n         placeholder='What on your mind?' validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add new post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: \"postAddPostForm\"})(AddPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostBody) => {\r\n      dispatch(addPostActionCreator(newPostBody));\r\n    }\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from './MyPosts/ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n// debugger;\r\n  return (\r\n    <div className={classes.content}>\r\n\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatusThunk={props.updateStatusThunk} />\r\n\r\n      <MyPostsContainer />\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { getUserProfileThunk, updateStatusThunk, getStatusThunk } from '../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n// import { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    // Here we place all the side effects\r\n    let userId = this.props.match.params.userId;\r\n\r\n    if (!userId) {\r\n      userId = this.props.loggedinUserId;\r\n      if(!userId){\r\n        this.props.history.push('/login'); // not so good solution, better to do redirect in the jsx\r\n      }\r\n    }\r\n\r\n    this.props.getUserProfileThunk(userId);\r\n    this.props.getStatusThunk(userId);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile {...this.props}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatusThunk={this.props.updateStatusThunk} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  loggedinUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfileThunk, getStatusThunk, updateStatusThunk }),\r\n  withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}