{"version":3,"sources":["Components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/ProfileStatusWithHooks.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileDataForm.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","classes","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatusThunk","ProfileDataFormReduxForm","reduxForm","form","profile","handleSubmit","error","column","onSubmit","errorStyle","formSummaryError","createField","Input","Textarea","Object","keys","contacts","map","key","lookinForAJob","type","ProfileData","isOwner","goToEditMode","onClick","fullName","aboutMe","contactTitle","contactValue","lookingForAJob","lookingForAJobDescription","Contact","contact","href","ProfileInfo","savePhoto","saveProfile","Preloader","image","src","photos","large","userPhoto","initialValues","formData","then","target","files","length","Post","item","message","likes","MyPosts","React","memo","postsElements","posts","reverse","p","id","likesCount","postsBlock","AddPostFormRedux","values","addPost","newPostBody","maxLength10","maxLengthCreator","Field","component","name","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","content","ProfileContainer","userId","this","match","params","loggedinUserId","history","push","getUserProfileThunk","getStatusThunk","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.93664811.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ProfileInfo_image__1PlRm\",\"contact\":\"ProfileInfo_contact__3vuDS\",\"column\":\"ProfileInfo_column__2ode0\",\"status\":\"ProfileInfo_status__30xms\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__glArt\",\"postsBlock\":\"MyPosts_postsBlock__Csxy3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__36yWd\"};","import React, { useState, useEffect } from 'react';\r\nimport classes from './MyPosts/ProfileInfo/ProfileInfo.module.css';\r\n\r\n// let arr = [0, () => {}]; destructuring assigment\r\n// let [a, setA] = arr;\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);  // Use State returns [a, setA]\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]); // after render\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatusThunk(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div className={classes.status}>\r\n                    <b>Status:</b><span onDoubleClick={activateEditMode}>{props.status || \"----------\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport { createField, Input, Textarea } from '../../../Common/FormsControls/FormsControls';\r\nimport classes from './ProfileInfo.module.css';\r\nimport { reduxForm } from 'redux-form';\r\nimport errorStyle from '../../../Common/FormsControls/FormsControls.module.css';\r\n\r\nconst ProfileDataForm = ({ profile, handleSubmit, error }) => {\r\n  return (\r\n    <form className={classes.column} onSubmit={profile, handleSubmit}>\r\n      <div>\r\n        <button>Save</button>\r\n      </div>\r\n\r\n      {error && <div className={errorStyle.formSummaryError}>{error}</div>}\r\n\r\n      <div><b>My Name:</b> {createField(\"Full name\", \"fullName\", [], Input)}</div>\r\n      <div><b>About me:</b>{createField(\"About Me\", \"aboutMe\", [], Textarea)}</div>\r\n      <div>My Contacts:\r\n        {Object.keys(profile.contacts).map(key => {\r\n        return <div key={key}>\r\n          {key}: {createField(key, \"contacts.\" + key, [], Textarea)}\r\n        </div>\r\n      })}\r\n      </div>\r\n      <div className={classes.lookinForAJob}>\r\n        <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n      </div>\r\n      <div className={classes.lookinForAJob}>\r\n        <b>My skills</b>:{createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport const ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm)","import React, { useState } from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from '../../../Common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from '../../ProfileStatusWithHooks';\r\nimport userPhoto from '../../../../assets/images/user.png';\r\nimport { ProfileDataFormReduxForm } from './ProfileDataForm';\r\n\r\nconst ProfileInfo = ({ profile, updateStatusThunk, status, isOwner, savePhoto, saveProfile }) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelect = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n  // not so good solution\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        <span className={classes.image}><img src={profile.photos.large || userPhoto} /></span>\r\n        \r\n      \r\n      {editMode\r\n        ? <ProfileDataFormReduxForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n        : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner} />}\r\n      <div>{isOwner && <input type={\"file\"} onChange={onMainPhotoSelect} />}</div>\r\n      <div><ProfileStatusWithHooks status={status} updateStatusThunk={updateStatusThunk} /></div>\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div className={classes.column}>\r\n      {isOwner && <div><button onClick={goToEditMode}>Edit</button></div>}\r\n\r\n      <div>\r\n      <h2><b>My name is:</b> {profile.fullName}</h2>\r\n      <p>{profile.aboutMe}</p>\r\n        <h2>My Contacts:</h2>\r\n        {Object.keys(profile.contacts).map(key => {\r\n          return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n        })}\r\n      </div>\r\n      <div className={classes.lookinForAJob}>\r\n        <b>Looking for a job</b>:{profile.lookingForAJob ? \"Yes!\" : \"No\"}\r\n      </div>\r\n      {profile.lookingForAJob &&\r\n        <div className={classes.lookinForAJob}>\r\n          <b>My skills</b>:{profile.lookingForAJobDescription}\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={classes.contact}><a href={contactValue}><b>{contactTitle}</b></a></div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n  return (\r\n    <div className={classes.item}>\r\n      <img src=\"https://arrowheadguys.com/wp-content/uploads/2018/11/avatar.jpg\" />\r\n      <div>{props.message}</div>\r\n      <div>likes: {props.likes}</div>\r\n      <div>\r\n        <span>Like</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../Common/FormsControls/FormsControls';\r\n\r\nconst MyPosts = React.memo(props => {\r\n  \r\n  let postsElements =\r\n  //copy the array for immutab.\r\n  [...props.posts].reverse().map(p => <Post key={p.id} message={p.message} likes={p.likesCount} key={p.id} />);\r\n\r\n  const onSubmit = (values) => {\r\n    props.addPost(values.newPostBody);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.postsBlock}>\r\n      <h3>My Posts</h3>\r\n      <AddPostFormRedux onSubmit={onSubmit} />\r\n      <div className={classes.posts}>\r\n\r\n        {postsElements}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name=\"newPostBody\"\r\n         placeholder='What on your mind?' validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add new post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: \"postAddPostForm\"})(AddPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostBody) => {\r\n      dispatch(addPostActionCreator(newPostBody));\r\n    }\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from './MyPosts/ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n//  debugger;\r\n  return (\r\n    <div className={classes.content}>\r\n\r\n      <ProfileInfo profile={props.profile}\r\n        status={props.status}\r\n        updateStatusThunk={props.updateStatusThunk}\r\n        isOwner={props.isOwner}\r\n        savePhoto={props.savePhoto}\r\n        saveProfile={props.saveProfile} />\r\n\r\n      <MyPostsContainer />\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { getUserProfileThunk, updateStatusThunk, getStatusThunk, savePhoto, saveProfile } from '../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n// import { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n\r\n    if (!userId) {\r\n      userId = this.props.loggedinUserId;\r\n      if (!userId) {\r\n        this.props.history.push('/login'); // not so good solution, better to do redirect in the jsx\r\n      }\r\n    }\r\n\r\n    this.props.getUserProfileThunk(userId);\r\n    this.props.getStatusThunk(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Here we place all the side effects\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile {...this.props}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatusThunk={this.props.updateStatusThunk}\r\n          isOwner={!this.props.match.params.userId}\r\n          savePhoto={this.props.savePhoto} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  loggedinUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfileThunk, getStatusThunk, updateStatusThunk, savePhoto, saveProfile }),\r\n  withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}