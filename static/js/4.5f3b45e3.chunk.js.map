{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/DialogsItem/DialogsItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogsItem","props","name","path","id","className","classes","dialog","src","to","activeClassName","active","Message","React","createRef","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","btn","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","isAuth","dialogsItem","values","addMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","addMessageActionCreator","Component","RedirectComponent","this"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,IAAM,uB,+FCkBjOC,EAfK,SAACC,GAEjB,IAAIC,EAAOD,EAAMC,KACbC,EAAO,YAAcF,EAAMG,GAE/B,OACI,yBAAKC,UAAWC,IAAQC,QACpB,0BAAMF,UAAU,aACZ,yBAAKG,IAAI,MAEb,kBAAC,IAAD,CAASC,GAAIN,EAAMO,gBAAiBJ,IAAQK,QAAST,KCDlDU,EAVC,SAACX,GAEIY,IAAMC,YACvB,OACI,yBAAKT,UAAWC,IAAQS,SACnBd,EAAMc,U,yCC6BbC,EAAcC,YAAiB,IAgB/BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAdL,SAAClB,GACpB,OACI,0BAAMoB,SAAUpB,EAAMqB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUvB,KAAK,iBACjCwB,SAAU,CAACC,IAAUX,GAAcY,YAAY,wBAEnD,6BACI,4BAAQvB,UAAWC,IAAQuB,KAA3B,aAQDC,EA9CC,SAAC7B,GAEb,IAAI8B,EAAQ9B,EAAM+B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAalC,KAAMkC,EAAElC,KAAME,GAAIgC,EAAEhC,GAAIiC,IAAKD,EAAEhC,QACrFkC,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASzB,QAASyB,EAAEzB,QAASsB,IAAKG,EAAEpC,QAMnF,OAAIH,EAAMwC,OAGN,yBAAKpC,UAAWC,IAAQ4B,SACpB,yBAAK7B,UAAWC,IAAQoC,aAEnBT,GAGL,yBAAK5B,UAAWC,IAAQiC,UACpB,6BAAMD,GACN,kBAACpB,EAAD,CAAqBG,SAfX,SAACsB,GACnB1C,EAAM2C,WAAWD,EAAOE,qBAGH,kBAAC,IAAD,CAAUpC,GAAK,Y,wCChBxCqC,EAA6B,SAACf,GAAD,MAAY,CACzCU,OAAOV,EAAMgB,KAAKN,S,OCkBPO,sBACXC,aAjBoB,SAAClB,GACrB,MAAO,CACHC,YAAaD,EAAMC,gBAIA,SAACkB,GACxB,MAAO,CACHN,WAAY,SAACC,GACTK,EAASC,YAAwBN,UDRb,SAACO,GAAe,IAEtCC,EAFqC,uKAInC,OAAIC,KAAKrD,MAAMwC,OAER,kBAACW,EAAcE,KAAKrD,OAFG,kBAAC,IAAD,CAAUQ,GAAI,eAJT,GAEXI,IAAMuC,WAUtC,OAFqCH,YAASH,EAATG,CAAqCI,KCK/DL,CAGblB","file":"static/js/4.5f3b45e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__26gqi\",\"dialogsItem\":\"Dialogs_dialogsItem__3YtyK\",\"active\":\"Dialogs_active__3cRiu\",\"dialog\":\"Dialogs_dialog__3Uctx\",\"messages\":\"Dialogs_messages__-j2-8\",\"message\":\"Dialogs_message__2Jj5l\",\"btn\":\"Dialogs_btn__cafOz\"};","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogsItem = (props) => {\r\n\r\n    let name = props.name,\r\n        path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={classes.dialog}>\r\n            <span className=\"userImage\">\r\n                <img src=\"\" />\r\n            </span>\r\n            <NavLink to={path} activeClassName={classes.active}>{name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogsItem;","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n\r\n    let newMessage = React.createRef();\r\n    return (\r\n        <div className={classes.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogsItem from './DialogsItem/DialogsItem';\r\nimport Message from './Message/Message';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Textarea } from '../Common/FormsControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogsItem name={d.name} id={d.id} key={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n\r\n    const addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody);\r\n    };\r\n    \r\n    if(!props.isAuth) return <Redirect to ={\"/login\"} /> ;\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItem}>\r\n\r\n                {dialogsElements}\r\n\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newMessageBody\" \r\n                validate={[required, maxLength50]} placeholder=\"Enter your message\" />\r\n            </div>\r\n            <div>\r\n                <button className={classes.btn}>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth:state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={'/login'} />\r\n              \r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};","import React from 'react';\r\nimport {  addMessageActionCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(addMessageActionCreator(newMessageBody));\r\n        }\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}