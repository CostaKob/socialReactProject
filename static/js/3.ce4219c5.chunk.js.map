{"version":3,"sources":["Components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/ProfileStatusWithHooks.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileDataForm.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatusThunk","ProfileDataFormReduxForm","reduxForm","form","profile","handleSubmit","error","onSubmit","className","errorStyle","formSummaryError","createField","Input","Textarea","Object","keys","contacts","map","key","classes","lookinForAJob","type","ProfileData","isOwner","goToEditMode","onClick","fullName","aboutMe","contactTitle","contactValue","lookingForAJob","lookingForAJobDescription","Contact","contact","href","ProfileInfo","savePhoto","saveProfile","Preloader","image","src","photos","large","userPhoto","target","files","length","initialValues","formData","Post","item","message","likes","MyPosts","React","memo","postsElements","posts","reverse","p","id","likesCount","postsBlock","AddPostFormRedux","values","addPost","newPostBody","maxLength10","maxLengthCreator","Field","component","name","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","content","ProfileContainer","userId","this","match","params","loggedinUserId","history","push","getUserProfileThunk","getStatusThunk","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.ce4219c5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ProfileInfo_image__1PlRm\",\"contact\":\"ProfileInfo_contact__3vuDS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__glArt\",\"postsBlock\":\"MyPosts_postsBlock__Csxy3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__36yWd\"};","import React, { useState, useEffect } from 'react';\r\nimport classes from './Profile.module.css';\r\n\r\n// let arr = [0, () => {}]; destructuring assigment\r\n// let [a, setA] = arr;\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);  // Use State returns [a, setA]\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]); // after render\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatusThunk(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <b>Status:</b><span onDoubleClick={activateEditMode}>{props.status || \"----------\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport { createField, Input, Textarea } from '../../../Common/FormsControls/FormsControls';\r\nimport classes from './ProfileInfo.module.css';\r\nimport { reduxForm } from 'redux-form';\r\nimport errorStyle from '../../../Common/FormsControls/FormsControls.module.css';\r\n\r\nconst ProfileDataForm = ({ profile, handleSubmit, error }) => {\r\n  return (\r\n    <form onSubmit={ profile, handleSubmit }>\r\n      <div><button>Save</button></div>\r\n      {error && <div className={errorStyle.formSummaryError}>{error}</div>}\r\n\r\n      <div> { createField(\"Full name\", \"fullName\", [], Input) }</div>\r\n      <div><b>About me:</b>{ createField(\"About Me\", \"aboutMe\", [], Textarea) }</div>\r\n      <div>My Contacts:\r\n        {Object.keys(profile.contacts).map(key => {\r\n          return <div key={key}>\r\n            {key}: { createField(key, \"contacts.\" + key, [], Textarea) }\r\n          </div>\r\n        })}\r\n      </div>\r\n      <div className={classes.lookinForAJob}>\r\n        <b>Looking for a job</b>: { createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"}) }\r\n      </div>\r\n        <div className={classes.lookinForAJob}>\r\n          <b>My skills</b>:{ createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea) }\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport const ProfileDataFormReduxForm = reduxForm({form:'edit-profile'})(ProfileDataForm)","import React, { useState } from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from '../../../Common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from '../../ProfileStatusWithHooks';\r\nimport userPhoto from '../../../../assets/images/user.png';\r\nimport { ProfileDataFormReduxForm } from './ProfileDataForm';\r\n\r\nconst ProfileInfo = ({ profile, updateStatusThunk, status, isOwner, savePhoto, saveProfile }) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelect = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n   saveProfile(formData);\r\n  //  setEditMode(false);\r\n};\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.image}><img src={profile.photos.large || userPhoto} /></div>\r\n      {isOwner && <input type={\"file\"} onChange={onMainPhotoSelect} />}\r\n\r\n      {editMode\r\n        ? <ProfileDataFormReduxForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n        : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner} />}\r\n\r\n      <div><ProfileStatusWithHooks status={status} updateStatusThunk={updateStatusThunk} /></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div>\r\n      {isOwner && <div><button onClick={goToEditMode}>Edit</button></div>}\r\n      <h2><b>My name is:</b> {profile.fullName}</h2>\r\n      <p>{profile.aboutMe}</p>\r\n\r\n      \r\n      <div>\r\n      <h2>My Contacts:</h2>\r\n        {Object.keys(profile.contacts).map(key => {\r\n          return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n        })}\r\n      </div>\r\n      <div className={classes.lookinForAJob}>\r\n        <b>Looking for a job</b>:{profile.lookingForAJob ? \"Yes!\" : \"No\"}\r\n      </div>\r\n      {profile.lookingForAJob &&\r\n        <div className={classes.lookinForAJob}>\r\n          <b>My skills</b>:{profile.lookingForAJobDescription}\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={classes.contact}><a href={contactValue}><b>{contactTitle}</b></a></div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n  return (\r\n    <div className={classes.item}>\r\n      <img src=\"https://arrowheadguys.com/wp-content/uploads/2018/11/avatar.jpg\" />\r\n      <div>{props.message}</div>\r\n      <div>likes: {props.likes}</div>\r\n      <div>\r\n        <span>Like</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../Common/FormsControls/FormsControls';\r\n\r\nconst MyPosts = React.memo(props => {\r\n  \r\n  let postsElements =\r\n  //copy the array for immutab.\r\n  [...props.posts].reverse().map(p => <Post key={p.id} message={p.message} likes={p.likesCount} key={p.id} />);\r\n\r\n  const onSubmit = (values) => {\r\n    props.addPost(values.newPostBody);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.postsBlock}>\r\n      <h3>My Posts</h3>\r\n      <AddPostFormRedux onSubmit={onSubmit} />\r\n      <div className={classes.posts}>\r\n\r\n        {postsElements}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name=\"newPostBody\"\r\n         placeholder='What on your mind?' validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add new post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: \"postAddPostForm\"})(AddPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostBody) => {\r\n      dispatch(addPostActionCreator(newPostBody));\r\n    }\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from './MyPosts/ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n//  debugger;\r\n  return (\r\n    <div className={classes.content}>\r\n\r\n      <ProfileInfo profile={props.profile}\r\n        status={props.status}\r\n        updateStatusThunk={props.updateStatusThunk}\r\n        isOwner={props.isOwner}\r\n        savePhoto={props.savePhoto}\r\n        saveProfile={props.saveProfile} />\r\n\r\n      <MyPostsContainer />\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { getUserProfileThunk, updateStatusThunk, getStatusThunk, savePhoto, saveProfile } from '../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n// import { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n\r\n    if (!userId) {\r\n      userId = this.props.loggedinUserId;\r\n      if(!userId){\r\n        this.props.history.push('/login'); // not so good solution, better to do redirect in the jsx\r\n      }\r\n    }\r\n\r\n    this.props.getUserProfileThunk(userId);\r\n    this.props.getStatusThunk(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Here we place all the side effects\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId){\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile {...this.props}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatusThunk={this.props.updateStatusThunk}\r\n          isOwner={ !this.props.match.params.userId }\r\n          savePhoto={this.props.savePhoto} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  loggedinUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfileThunk, getStatusThunk, updateStatusThunk, savePhoto, saveProfile }),\r\n  withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}