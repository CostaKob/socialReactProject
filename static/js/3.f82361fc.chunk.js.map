{"version":3,"sources":["Components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/ProfileStatusWithHooks.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatusThunk","ProfileInfo","profile","isOwner","savePhoto","Preloader","className","classes","row","column","src","photos","large","userPhoto","type","target","files","length","fullName","aboutMe","href","contacts","website","facebook","twitter","instagram","lookinForAJob","lookingForAJobDescription","Post","item","message","likes","MyPosts","React","memo","postsElements","posts","reverse","map","p","likesCount","key","id","postsBlock","AddPostFormRedux","onSubmit","values","addPost","newPostBody","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","content","ProfileContainer","userId","this","match","params","loggedinUserId","history","push","getUserProfileThunk","getStatusThunk","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.f82361fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ProfileInfo_image__1PlRm\",\"row\":\"ProfileInfo_row__3OZVf\",\"column\":\"ProfileInfo_column__2ode0\",\"lookinForAJob\":\"ProfileInfo_lookinForAJob__iLiOh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__glArt\",\"postsBlock\":\"MyPosts_postsBlock__Csxy3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__36yWd\"};","import React, { useState, useEffect } from 'react';\r\nimport classes from './Profile.module.css';\r\n\r\n// let arr = [0, () => {}]; destructuring assigment\r\n// let [a, setA] = arr;\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);  // Use State returns [a, setA]\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]); // after render\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatusThunk(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"----------\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from '../../../Common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from '../../ProfileStatusWithHooks';\r\nimport userPhoto from '../../../../assets/images/user.png';\r\n\r\nconst ProfileInfo = ({ profile, updateStatusThunk, status, isOwner, savePhoto }) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelect = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.row}>\r\n        <div className={classes.column}>\r\n          <img src={profile.photos.large || userPhoto} />\r\n          { isOwner && <input type={\"file\"} onChange={onMainPhotoSelect}/> }\r\n          <h2>{profile.fullName}</h2>\r\n          <p>{profile.aboutMe}</p>\r\n          <div><ProfileStatusWithHooks status={status} updateStatusThunk={updateStatusThunk} /></div>\r\n        </div>\r\n        <div className={classes.column}>\r\n          <h2>My Contacts:</h2>\r\n          <ul>\r\n            <li><a href={profile.contacts.website}>Website</a></li>\r\n            <li><a href={profile.contacts.facebook}>Facebook</a></li>\r\n            <li><a href={profile.contacts.twitter}>Twitter</a></li>\r\n            <li><a href={profile.contacts.instagram}>Instagram</a></li>\r\n          </ul>\r\n          <div className={classes.lookinForAJob}>Looking for a job? {profile.lookingForAJobDescription}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n  return (\r\n    <div className={classes.item}>\r\n      <img src=\"https://arrowheadguys.com/wp-content/uploads/2018/11/avatar.jpg\" />\r\n      <div>{props.message}</div>\r\n      <div>likes: {props.likes}</div>\r\n      <div>\r\n        <span>Like</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../Common/FormsControls/FormsControls';\r\n\r\nconst MyPosts = React.memo(props => {\r\n  \r\n  let postsElements =\r\n  //snachala KOPIRUEM massiv dlya immutabelnosti\r\n  [...props.posts].reverse().map(p => <Post message={p.message} likes={p.likesCount} key={p.id} />);\r\n\r\n  const onSubmit = (values) => {\r\n    props.addPost(values.newPostBody);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.postsBlock}>\r\n      <h3>My Posts</h3>\r\n      <AddPostFormRedux onSubmit={onSubmit} />\r\n      <div className={classes.posts}>\r\n\r\n        {postsElements}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name=\"newPostBody\"\r\n         placeholder='What on your mind?' validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add new post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: \"postAddPostForm\"})(AddPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostBody) => {\r\n      dispatch(addPostActionCreator(newPostBody));\r\n    }\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from './MyPosts/ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n//  debugger;\r\n  return (\r\n    <div className={classes.content}>\r\n\r\n      <ProfileInfo profile={props.profile}\r\n        status={props.status}\r\n        updateStatusThunk={props.updateStatusThunk}\r\n        isOwner={props.isOwner}\r\n        savePhoto={props.savePhoto} />\r\n\r\n      <MyPostsContainer />\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { getUserProfileThunk, updateStatusThunk, getStatusThunk, savePhoto } from '../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n// import { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n\r\n    if (!userId) {\r\n      userId = this.props.loggedinUserId;\r\n      if(!userId){\r\n        this.props.history.push('/login'); // not so good solution, better to do redirect in the jsx\r\n      }\r\n    }\r\n\r\n    this.props.getUserProfileThunk(userId);\r\n    this.props.getStatusThunk(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Here we place all the side effects\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId){\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile {...this.props}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatusThunk={this.props.updateStatusThunk}\r\n          isOwner={ !this.props.match.params.userId }\r\n          savePhoto={this.props.savePhoto} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  loggedinUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfileThunk, getStatusThunk, updateStatusThunk, savePhoto }),\r\n  withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}